@page "/add-project"
@using SkillSnap.Client.Models
@using SkillSnap.Client.Services
@using Microsoft.AspNetCore.Components.Forms
@inject ProjectService ProjectService

<h3 class="mb-4">üìÅ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç</h3>

<EditForm Model="@newProject" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="title" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ:</label>
        <InputText id="title"
                   @bind-Value="newProject.Title"
                   class="form-control" />
        <ValidationMessage For="@(() => newProject.Title)" />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
        <InputTextArea id="description"
                       @bind-Value="newProject.Description"
                       class="form-control" />
        <ValidationMessage For="@(() => newProject.Description)" />
    </div>

    <button type="submit" class="btn btn-primary">üöÄ –î–æ–±–∞–≤–∏—Ç—å</button>
</EditForm>

@if (!string.IsNullOrWhiteSpace(statusMessage))
{
    <div class="alert alert-info mt-4">@statusMessage</div>
}

@code {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è required-—Å–≤–æ–π—Å—Ç–≤
    private Project newProject = new()
    {
        Title = string.Empty,
        Description = string.Empty
    };

    private string statusMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        try
        {
            await ProjectService.AddProjectAsync(newProject);
            statusMessage = "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!";
            newProject = new()
            {
                Title = string.Empty,
                Description = string.Empty
            };
        }
        catch (Exception ex)
        {
            statusMessage = $"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: {ex.Message}";
        }
    }
}





@page "/register"
@inject NavigationManager Navigation
@inject IAuthService AuthService

@using SkillSnap.Client.Models
@using Microsoft.AspNetCore.Components.Forms

<h3>üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
        <InputText @bind-Value="registerModel.UserName" class="form-control" />
        <ValidationMessage For="@(() => registerModel.UserName)" />
    </div>

    <div class="mb-3">
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="mb-3">
        <label>–ü–∞—Ä–æ–ª—å:</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="mb-3">
        <label>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <button type="submit" class="btn btn-success">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
</EditForm>

@code {
    private RegisterModel registerModel = new()
{
    Email = string.Empty,
    Password = string.Empty,
    ConfirmPassword = string.Empty,
    UserName = string.Empty
};

    private string? errorMessage;

    private async Task HandleRegister()
    {
        var success = await AuthService.RegisterAsync(registerModel);
        if (success)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            errorMessage = "‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.";
        }
    }
}




